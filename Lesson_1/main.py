# print(5, 8, 6)

# '''a = 123
# b = 1.23
# c = 1,23
# print(a)
# print(b)
# print(c)''' #длинный комментарий на несколько строк

# n = 5
# print(type(n))

# s = 'hello,'
# w = "world"
# print(s, w)

# d = 'hello "world"'
# e = "hello 'world'"
# f = 'hello \"world'
# print(d)
# print(e)
# #print(f) - комментарий одной строки

# g = 3
# h = 11
# k = 2022
# print(g, h, k)
# print(g, '-', h, '-', k)
# print('{} - {} - {}'.format(g,h,k))
# print(f'first - {g} second - {h} third - {k}')

# '''int() - функция, которая позволяет перевести из любого типа данных в
# число(если это возможно)'''
# n = 1.345
# print(int(n)) # Отбрасывается дробная часть вне зависимости больше 0.5 или меньше
# m = '3450'
# print(m * 2) # При умножении строки на число, она повторяется столько раз на какое была умножена
# print(int(m) * 2)


# ''' str() - функция, которая позволяет перевести из любого типа данных в
# строку(если это возможно)'''
# n = 1.345
# print(str(n) * 2)


# '''float() - функция, которая позволяет перевести из любого типа данных в
# вещественный(если это возможно)'''
# n = '1.345'
# print(float(n) * 2)
# m = 2
# print(float(m))

# a = 1 < 4 and 5 > 2
# print(a) # True

# #Пример оформления программного кода с операторами ветвления:
# username = input('Введите имя: ')
# if username == 'Маша':
#     print('Ура, это же МАША!')
# elif username == 'Марина':
#     print('Я так ждала Вас, Марина!')
# elif username == 'Ильнар':
#     print('Ильнар - топ)')
# else:
#     print('Привет, ', username)

# #Управляющие конструкции: while и вариация while-else
# n = 423
# summa = 0
# while n > 0:
#     x = n % 10
#     summa = summa + x
#     n = n // 10
# print(summa) # 9


# #Задача: Пользователь вводит число, 
# #необходимо найти минимальный делитель данного числа
# n = int(input())
# flag = True
# i = 2
# while flag:
#     if n % i == 0: # если остаток при делении числа n на i равен 0
#         flag = False
#         print(i)
#     elif i > n // 2: # делить числа не может превышать введенное число, деленное на 2
#         print(n)
#         flag = False
# i += 1


#Range:
#● Range выдает значения из диапазона с шагом 1.
#● Если указано только одно число — от 0 до заданного числа.
#● Если нужен другой шаг, третьим аргументов можно задать приращение.
# r = range(5) # 0 1 2 3 4
# r = range(2, 5) # 2 3 4
# r = range(-5, 0) # ----
#r = range(1, 10, 2) # 1 3 5 7 9
# r = range(100, 0, -20)
# for i in r:
#     print(i)  # 100 80 60 40 20


# # цикл for() и со строками
# for i in 'qwerty':
#     print(i)

# цикл for() и вложенные циклы:
line = ""
for i in range(5):
    line = ""
    for j in range(5):
        line += "*"
    print(line)
